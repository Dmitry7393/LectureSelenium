# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := chromium_base
### Rules for action "input_dir":
quiet_cmd_base_gyp_chromium_base_target_input_dir = ACTION base_gyp_chromium_base_target_input_dir $@
cmd_base_gyp_chromium_base_target_input_dir = LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; export LD_LIBRARY_PATH; cd $(srcdir)/.; mkdir -p $(obj).$(TOOLSET)/chromium_base; mkdir -p "$(obj).$(TOOLSET)/chromium_base/geni"

$(obj).$(TOOLSET)/$(TARGET)/geni: obj := $(abs_obj)
$(obj).$(TOOLSET)/$(TARGET)/geni: builddir := $(abs_builddir)
$(obj).$(TOOLSET)/$(TARGET)/geni: TOOLSET := $(TOOLSET)
$(obj).$(TOOLSET)/$(TARGET)/geni:  FORCE_DO_CMD
	$(call do_cmd,base_gyp_chromium_base_target_input_dir)

all_deps += $(obj).$(TOOLSET)/$(TARGET)/geni
action_base_gyp_chromium_base_target_input_dir_outputs := $(obj).$(TOOLSET)/$(TARGET)/geni


DEFS_Default := \
	'-DQT_NO_DEBUG' \
	'-DQT_GUI_LIB' \
	'-DQT_CORE_LIB' \
	'-DQT_SHARED' \
	'-DQT_NO_OPENGL' \
	'-D__STDC_FORMAT_MACROS' \
	'-DOS_POSIX' \
	'-DNDEBUG'

# Flags passed to all source files.
CFLAGS_Default := \
	-fPIC \
	-Wall \
	-W \
	-Wno-unused-parameter \
	-O3

# Flags passed to only C files.
CFLAGS_C_Default :=

# Flags passed to only C++ files.
CFLAGS_CC_Default :=

INCS_Default := \
	-I$(srcdir)/inc \
	-I$(srcdir)/src

OBJS := \
	$(obj).target/$(TARGET)/src/base/at_exit.o \
	$(obj).target/$(TARGET)/src/base/atomicops_internals_x86_gcc.o \
	$(obj).target/$(TARGET)/src/base/base64.o \
	$(obj).target/$(TARGET)/src/base/base_paths.o \
	$(obj).target/$(TARGET)/src/base/base_switches.o \
	$(obj).target/$(TARGET)/src/base/callback_internal.o \
	$(obj).target/$(TARGET)/src/base/command_line.o \
	$(obj).target/$(TARGET)/src/base/debug/alias.o \
	$(obj).target/$(TARGET)/src/base/debug/debugger.o \
	$(obj).target/$(TARGET)/src/base/environment.o \
	$(obj).target/$(TARGET)/src/base/file_path.o \
	$(obj).target/$(TARGET)/src/base/file_util.o \
	$(obj).target/$(TARGET)/src/base/json/json_parser.o \
	$(obj).target/$(TARGET)/src/base/json/json_reader.o \
	$(obj).target/$(TARGET)/src/base/json/json_writer.o \
	$(obj).target/$(TARGET)/src/base/json/string_escape.o \
	$(obj).target/$(TARGET)/src/base/lazy_instance.o \
	$(obj).target/$(TARGET)/src/base/location.o \
	$(obj).target/$(TARGET)/src/base/logging.o \
	$(obj).target/$(TARGET)/src/base/memory/ref_counted.o \
	$(obj).target/$(TARGET)/src/base/memory/singleton.o \
	$(obj).target/$(TARGET)/src/base/memory/weak_ptr.o \
	$(obj).target/$(TARGET)/src/base/message_loop.o \
	$(obj).target/$(TARGET)/src/base/message_loop_proxy.o \
	$(obj).target/$(TARGET)/src/base/message_loop_proxy_impl.o \
	$(obj).target/$(TARGET)/src/base/message_pump.o \
	$(obj).target/$(TARGET)/src/base/message_pump_default.o \
	$(obj).target/$(TARGET)/src/base/metrics/bucket_ranges.o \
	$(obj).target/$(TARGET)/src/base/metrics/histogram_base.o \
	$(obj).target/$(TARGET)/src/base/metrics/histogram.o \
	$(obj).target/$(TARGET)/src/base/metrics/histogram_samples.o \
	$(obj).target/$(TARGET)/src/base/metrics/sample_vector.o \
	$(obj).target/$(TARGET)/src/base/metrics/statistics_recorder.o \
	$(obj).target/$(TARGET)/src/base/path_service.o \
	$(obj).target/$(TARGET)/src/base/pending_task.o \
	$(obj).target/$(TARGET)/src/base/pickle.o \
	$(obj).target/$(TARGET)/src/base/platform_file.o \
	$(obj).target/$(TARGET)/src/base/profiler/alternate_timer.o \
	$(obj).target/$(TARGET)/src/base/profiler/scoped_profile.o \
	$(obj).target/$(TARGET)/src/base/profiler/tracked_time.o \
	$(obj).target/$(TARGET)/src/base/rand_util.o \
	$(obj).target/$(TARGET)/src/base/run_loop.o \
	$(obj).target/$(TARGET)/src/base/scoped_temp_dir.o \
	$(obj).target/$(TARGET)/src/base/string_number_conversions.o \
	$(obj).target/$(TARGET)/src/base/string_piece.o \
	$(obj).target/$(TARGET)/src/base/stringprintf.o \
	$(obj).target/$(TARGET)/src/base/string_split.o \
	$(obj).target/$(TARGET)/src/base/string_util.o \
	$(obj).target/$(TARGET)/src/base/synchronization/lock.o \
	$(obj).target/$(TARGET)/src/base/task_runner.o \
	$(obj).target/$(TARGET)/src/base/third_party/dmg_fp/dtoa.o \
	$(obj).target/$(TARGET)/src/base/third_party/dmg_fp/g_fmt.o \
	$(obj).target/$(TARGET)/src/base/third_party/dynamic_annotations/dynamic_annotations.o \
	$(obj).target/$(TARGET)/src/base/third_party/icu/icu_utf.o \
	$(obj).target/$(TARGET)/src/base/third_party/nspr/prtime.o \
	$(obj).target/$(TARGET)/src/base/third_party/xdg_user_dirs/xdg_user_dir_lookup.o \
	$(obj).target/$(TARGET)/src/base/threading/post_task_and_reply_impl.o \
	$(obj).target/$(TARGET)/src/base/threading/thread.o \
	$(obj).target/$(TARGET)/src/base/threading/thread_checker_impl.o \
	$(obj).target/$(TARGET)/src/base/threading/thread_collision_warner.o \
	$(obj).target/$(TARGET)/src/base/threading/thread_restrictions.o \
	$(obj).target/$(TARGET)/src/base/threading/worker_pool.o \
	$(obj).target/$(TARGET)/src/base/thread_task_runner_handle.o \
	$(obj).target/$(TARGET)/src/base/time.o \
	$(obj).target/$(TARGET)/src/base/timer.o \
	$(obj).target/$(TARGET)/src/base/tracked_objects.o \
	$(obj).target/$(TARGET)/src/base/tracking_info.o \
	$(obj).target/$(TARGET)/src/base/utf_string_conversions.o \
	$(obj).target/$(TARGET)/src/base/utf_string_conversion_utils.o \
	$(obj).target/$(TARGET)/src/base/values.o \
	$(obj).target/$(TARGET)/src/net/base/file_stream.o \
	$(obj).target/$(TARGET)/src/net/base/file_stream_metrics.o \
	$(obj).target/$(TARGET)/src/net/base/file_stream_net_log_parameters.o \
	$(obj).target/$(TARGET)/src/net/base/io_buffer.o \
	$(obj).target/$(TARGET)/src/net/base/net_errors.o \
	$(obj).target/$(TARGET)/src/net/base/net_log.o \
	$(obj).target/$(TARGET)/src/third_party/modp_b64/modp_b64.o \
	$(obj).target/$(TARGET)/src/base/string16.o \
	$(obj).target/$(TARGET)/src/base/time_posix.o \
	$(obj).target/$(TARGET)/src/base/base_paths_posix.o \
	$(obj).target/$(TARGET)/src/base/debug/debugger_posix.o \
	$(obj).target/$(TARGET)/src/base/file_util_posix.o \
	$(obj).target/$(TARGET)/src/base/nix/xdg_util.o \
	$(obj).target/$(TARGET)/src/base/platform_file_posix.o \
	$(obj).target/$(TARGET)/src/base/rand_util_posix.o \
	$(obj).target/$(TARGET)/src/base/safe_strerror_posix.o \
	$(obj).target/$(TARGET)/src/base/synchronization/condition_variable_posix.o \
	$(obj).target/$(TARGET)/src/base/synchronization/lock_impl_posix.o \
	$(obj).target/$(TARGET)/src/base/synchronization/waitable_event_posix.o \
	$(obj).target/$(TARGET)/src/base/sys_info_posix.o \
	$(obj).target/$(TARGET)/src/base/sys_string_conversions_posix.o \
	$(obj).target/$(TARGET)/src/base/threading/platform_thread_posix.o \
	$(obj).target/$(TARGET)/src/base/threading/thread_local_posix.o \
	$(obj).target/$(TARGET)/src/base/threading/thread_local_storage_posix.o \
	$(obj).target/$(TARGET)/src/base/threading/worker_pool_posix.o \
	$(obj).target/$(TARGET)/src/net/base/file_stream_metrics_posix.o \
	$(obj).target/$(TARGET)/src/net/base/file_stream_posix.o \
	$(obj).target/$(TARGET)/src/net/base/net_errors_posix.o \
	$(obj).target/$(TARGET)/src/base/sys_info_linux.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our actions/rules run before any of us.
$(OBJS): | $(action_base_gyp_chromium_base_target_input_dir_outputs)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(obj).target/libchromium_base.a: | $(action_base_gyp_chromium_base_target_input_dir_outputs)

# Preserve order dependency of special output on deps.
$(action_base_gyp_chromium_base_target_input_dir_outputs): | 

LDFLAGS_Default :=

LIBS :=

$(obj).target/libchromium_base.a: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/libchromium_base.a: LIBS := $(LIBS)
$(obj).target/libchromium_base.a: TOOLSET := $(TOOLSET)
$(obj).target/libchromium_base.a: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,alink)

all_deps += $(obj).target/libchromium_base.a
# Add target alias
.PHONY: chromium_base
chromium_base: $(obj).target/libchromium_base.a

# Add target alias to "all" target.
.PHONY: all
all: chromium_base

# Add target alias
.PHONY: chromium_base
chromium_base: $(builddir)/libchromium_base.a

# Copy this to the static library output path.
$(builddir)/libchromium_base.a: TOOLSET := $(TOOLSET)
$(builddir)/libchromium_base.a: $(obj).target/libchromium_base.a FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/libchromium_base.a
# Short alias for building this static library.
.PHONY: libchromium_base.a
libchromium_base.a: $(obj).target/libchromium_base.a $(builddir)/libchromium_base.a

# Add static library to "all" target.
.PHONY: all
all: $(builddir)/libchromium_base.a

